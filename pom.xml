<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
  child.project.url.inherit.append.path="false">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.ongres.stringprep</groupId>
  <artifactId>parent</artifactId>
  <version>2.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Stringprep Project</name>
  <description>Stringprep Java implementation</description>
  <url>https://gitlab.com/ongresinc/stringprep</url>
  <inceptionYear>2019</inceptionYear>
  <organization>
    <name>OnGres, Inc</name>
    <url>https://www.ongres.com</url>
  </organization>
  <licenses>
    <license>
      <name>BSD 2-Clause "Simplified" License</name>
      <url>https://spdx.org/licenses/BSD-2-Clause</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>com.ongres.aht</id>
      <name>Álvaro Hernández Tortosa</name>
      <email>aht@ongres.com</email>
    </developer>
    <developer>
      <id>com.ongres.matteom</id>
      <name>Matteo Melli</name>
      <email>matteom@ongres.com</email>
    </developer>
    <developer>
      <id>com.ongres.jorsol</id>
      <name>Jorge Solórzano</name>
      <email>jorsol@ongres.com</email>
    </developer>
  </developers>

  <modules>
    <module>stringprep</module>
    <module>saslprep</module>
    <module>nameprep</module>
  </modules>

  <scm child.scm.connection.inherit.append.path="false"
    child.scm.developerConnection.inherit.append.path="false"
    child.scm.url.inherit.append.path="false">
    <connection>scm:git:git@gitlab.com:ongresinc/stringprep.git</connection>
    <developerConnection>scm:git:git@gitlab.com:ongresinc/stringprep.git</developerConnection>
    <url>https://gitlab.com/ongresinc/stringprep</url>
  </scm>
  <issueManagement>
    <system>GitLab</system>
    <url>https://gitlab.com/ongresinc/stringprep/issues</url>
  </issueManagement>

  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>8</java.version>
    <maven.compiler.release>${java.version}</maven.compiler.release>
    <!-- Dependency versions -->
    <junit5.version>5.7.1</junit5.version>
    <!-- Plugins versions -->
    <compiler-plugin.version>3.8.1</compiler-plugin.version>
    <jar-plugin.version>3.2.0</jar-plugin.version>
    <source-plugin.version>3.2.1</source-plugin.version>
    <javadoc-plugin.version>3.2.0</javadoc-plugin.version>
    <clean-plugin.version>3.1.0</clean-plugin.version>
    <resources-plugin.version>3.2.0</resources-plugin.version>
    <surefire-plugin.version>3.0.0-M5</surefire-plugin.version>
    <enforcer-plugin.version>3.0.0-M3</enforcer-plugin.version>
    <install-plugin.version>3.0.0-M1</install-plugin.version>
    <invoker-plugin.version>3.2.2</invoker-plugin.version>
    <gpg-plugin.version>1.6</gpg-plugin.version>
    <jacoco-plugin.verson>0.8.7</jacoco-plugin.verson>
    <nexus-staging-maven-plugin.version>1.6.8</nexus-staging-maven-plugin.version>
    <flatten-maven-plugin.version>1.2.7</flatten-maven-plugin.version>
    <jdeps-plugin.version>3.1.2</jdeps-plugin.version>
    <git-commit-id-plugin.version>4.0.4</git-commit-id-plugin.version>
    <reproducible-build-maven-plugin.version>0.13</reproducible-build-maven-plugin.version>
    <!-- Checkstyle, SpotBugs and PMD properties -->
    <checkstyle.version>8.42</checkstyle.version>
    <checkstyle-plugin.version>3.1.2</checkstyle-plugin.version>
    <spotbugs.version>4.2.3</spotbugs.version>
    <spotbugs-plugin.version>4.2.3</spotbugs-plugin.version>
    <findsecbugs.version>1.11.0</findsecbugs.version>
    <pmd.version>6.34.0</pmd.version>
    <pmd-plugin.version>3.14.0</pmd-plugin.version>
    <sonar-plugin.version>3.9.0.2155</sonar-plugin.version>
    <forbiddenapis.version>3.1</forbiddenapis.version>
    <checks.location>${project.basedir}/checks</checks.location>
    <checkstyle.config.location>${checks.location}/checkstyle.xml</checkstyle.config.location>
    <checkstyle.suppressions.location>${checks.location}/checkstyle-suppressions.xml</checkstyle.suppressions.location>
    <checkstyle.header.file>${checks.location}/checkstyle-header.txt</checkstyle.header.file>
    <spotbugs.excludeFilterFile>${checks.location}/spotbugs-exclude.xml</spotbugs.excludeFilterFile>
    <pmd.ruleset>${checks.location}/pmd-ruleset.xml</pmd.ruleset>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit5.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${compiler-plugin.version}</version>
          <configuration>
            <showDeprecation>true</showDeprecation>
            <showWarnings>true</showWarnings>
            <parameters>true</parameters>
            <useIncrementalCompilation>false</useIncrementalCompilation>
          </configuration>
          <executions>
            <execution>
              <id>compile-java9</id>
              <phase>compile</phase>
              <goals>
                <goal>compile</goal>
              </goals>
              <configuration>
                <release>9</release>
                <compileSourceRoots>
                  <compileSourceRoot>${project.basedir}/src/main/java9</compileSourceRoot>
                </compileSourceRoots>
                <multiReleaseOutput>true</multiReleaseOutput>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${jar-plugin.version}</version>
          <configuration>
            <skipIfEmpty>true</skipIfEmpty>
            <archive>
              <index>true</index>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
              <manifestEntries>
                <Multi-Release>true</Multi-Release>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${source-plugin.version}</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${javadoc-plugin.version}</version>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <release>${java.version}</release>
            <doclint>none</doclint>
            <quiet>true</quiet>
            <includeDependencySources>true</includeDependencySources>
            <validateLinks>true</validateLinks>
            <notimestamp>true</notimestamp>
            <tags>
              <tag>
                <name>apiNote</name>
                <placement>a</placement>
                <head>API Note:</head>
              </tag>
              <tag>
                <name>implSpec</name>
                <placement>a</placement>
                <head>Implementation Requirements:</head>
              </tag>
              <tag>
                <name>implNote</name>
                <placement>a</placement>
                <head>Implementation Note:</head>
              </tag>
            </tags>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${resources-plugin.version}</version>
          <executions>
            <execution>
              <id>add-license</id>
              <phase>generate-resources</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <outputDirectory>${project.build.outputDirectory}/META-INF</outputDirectory>
                <resources>
                  <resource>
                    <directory>..</directory>
                    <include>LICENSE</include>
                    <filtering>false</filtering>
                  </resource>
                </resources>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${surefire-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${install-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${clean-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${enforcer-plugin.version}</version>
          <executions>
            <execution>
              <id>enforce-versions</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>[3.6.3,)</version>
                  </requireMavenVersion>
                  <requireJavaVersion>
                    <version>[11,)</version>
                  </requireJavaVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>3.0.0-M1</version>
          <configuration>
            <skip>true</skip>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-plugin.verson}</version>
          <executions>
            <!-- prepare the agent -->
            <execution>
              <id>prepare-agent</id>
              <phase>process-test-classes</phase>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${sonar-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>flatten-maven-plugin</artifactId>
          <version>${flatten-maven-plugin.version}</version>
          <executions>
            <!-- enable flattening -->
            <execution>
              <id>flatten</id>
              <phase>process-resources</phase>
              <goals>
                <goal>flatten</goal>
              </goals>
            </execution>
            <!-- ensure proper cleanup -->
            <execution>
              <id>flatten-clean</id>
              <phase>clean</phase>
              <goals>
                <goal>clean</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <flattenMode>ossrh</flattenMode>
          </configuration>
        </plugin>
        <plugin>
          <groupId>pl.project13.maven</groupId>
          <artifactId>git-commit-id-plugin</artifactId>
          <version>${git-commit-id-plugin.version}</version>
          <executions>
            <execution>
              <id>get-the-git-infos</id>
              <goals>
                <goal>revision</goal>
              </goals>
              <phase>initialize</phase>
            </execution>
          </executions>
          <configuration>
            <injectAllReactorProjects>true</injectAllReactorProjects>
            <runOnlyOnce>true</runOnlyOnce>
            <includeOnlyProperties>
              <includeOnlyProperty>^git.commit.time$</includeOnlyProperty>
            </includeOnlyProperties>
            <dateFormatTimeZone>UTC</dateFormatTimeZone>
            <dateFormat>yyyyMMddHHmmss</dateFormat>
          </configuration>
        </plugin>
        <plugin>
          <groupId>io.github.zlika</groupId>
          <artifactId>reproducible-build-maven-plugin</artifactId>
          <version>${reproducible-build-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>strip-jar</id>
              <goals>
                <goal>strip-jar</goal>
              </goals>
              <configuration>
                <zipDateTime>${git.commit.time}</zipDateTime>
                <zipDateTimeFormatPattern>yyyyMMddHHmmss</zipDateTimeFormatPattern>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>codegen</id>
      <modules>
        <module>codegen</module>
      </modules>
    </profile>

    <profile>
      <id>it</id>
      <modules>
        <module>integration-tests</module>
      </modules>
    </profile>

    <profile>
      <id>coverage</id>
      <properties>
        <sonar.organization>ongresinc</sonar.organization>
        <aggregate.report.xml>jacoco-report/target/site/jacoco-aggregate/jacoco.xml</aggregate.report.xml>
        <sonar.coverage.jacoco.xmlReportPaths>${project.basedir}/${aggregate.report.xml}</sonar.coverage.jacoco.xmlReportPaths>
      </properties>
      <modules>
        <module>jacoco-report</module>
      </modules>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <!-- Slower but safer profile used to look for errors before pushing to SCM -->
      <id>check</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${compiler-plugin.version}</version>
            <configuration>
              <fork>true</fork>
              <compilerArgs>
                <arg>-Xlint:all</arg>
                <arg>-XDcompilePolicy=simple</arg>
                <arg>-Xplugin:ErrorProne</arg>
                <!-- Required on JDK 16 due to JEP 396 -->
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
              </compilerArgs>
              <annotationProcessorPaths>
                <path>
                  <groupId>com.google.errorprone</groupId>
                  <artifactId>error_prone_core</artifactId>
                  <version>2.6.0</version>
                </path>
              </annotationProcessorPaths>
            </configuration>
          </plugin>
          <plugin>
            <groupId>de.thetaphi</groupId>
            <artifactId>forbiddenapis</artifactId>
            <version>${forbiddenapis.version}</version>
            <configuration>
              <!--
                if the used Java version is too new,
                don't fail, just do nothing:
              -->
              <failOnUnsupportedJava>false</failOnUnsupportedJava>
              <bundledSignatures>
                <!--
                  This will automatically choose the right
                  signatures based on 'maven.compiler.target':
                -->
                <bundledSignature>jdk-unsafe</bundledSignature>
                <bundledSignature>jdk-deprecated</bundledSignature>
                <bundledSignature>jdk-internal</bundledSignature>
                <!-- disallow undocumented classes like sun.misc.Unsafe: -->
                <bundledSignature>jdk-non-portable</bundledSignature>
                <!-- don't allow unsafe reflective access: -->
                <bundledSignature>jdk-reflection</bundledSignature>
                <!-- don't allow System.out or System.err: -->
                <bundledSignature>jdk-system-out</bundledSignature>
              </bundledSignatures>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                  <goal>testCheck</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jdeps-plugin</artifactId>
            <version>${jdeps-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>jdkinternals</goal>
                  <goal>test-jdkinternals</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <multiRelease>9</multiRelease>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <version>${checkstyle-plugin.version}</version>
            <executions>
              <execution>
                <id>style</id>
                <phase>verify</phase>
                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <violationSeverity>error</violationSeverity>
                  <failOnViolation>true</failOnViolation>
                  <failsOnError>true</failsOnError>
                  <consoleOutput>true</consoleOutput>
                  <linkXRef>false</linkXRef>
                  <includeResources>false</includeResources>
                  <includeTestSourceDirectory>true</includeTestSourceDirectory>
                  <includeTestResources>false</includeTestResources>
                </configuration>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>com.puppycrawl.tools</groupId>
                <artifactId>checkstyle</artifactId>
                <version>${checkstyle.version}</version>
              </dependency>
            </dependencies>
          </plugin>
          <plugin>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-maven-plugin</artifactId>
            <version>${spotbugs-plugin.version}</version>
            <executions>
              <execution>
                <id>scan</id>
                <phase>verify</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs</artifactId>
                <version>${spotbugs.version}</version>
              </dependency>
            </dependencies>
            <configuration>
              <effort>Max</effort>
              <threshold>Low</threshold>
              <xmlOutput>true</xmlOutput>
              <failOnError>true</failOnError>
              <addSourceDirs>true</addSourceDirs>
              <plugins>
                <plugin>
                  <groupId>com.h3xstream.findsecbugs</groupId>
                  <artifactId>findsecbugs-plugin</artifactId>
                  <version>${findsecbugs.version}</version>
                </plugin>
              </plugins>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <version>${pmd-plugin.version}</version>
            <executions>
              <execution>
                <id>pmd-scan</id>
                <phase>verify</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>net.sourceforge.pmd</groupId>
                <artifactId>pmd-core</artifactId>
                <version>${pmd.version}</version>
              </dependency>
              <dependency>
                <groupId>net.sourceforge.pmd</groupId>
                <artifactId>pmd-java</artifactId>
                <version>${pmd.version}</version>
              </dependency>
            </dependencies>
            <configuration>
              <failurePriority>5</failurePriority>
              <failOnViolation>true</failOnViolation>
              <printFailingErrors>true</printFailingErrors>
              <linkXRef>false</linkXRef>
              <rulesets>
                <ruleset>${pmd.ruleset}</ruleset>
              </rulesets>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>pl.project13.maven</groupId>
            <artifactId>git-commit-id-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>io.github.zlika</groupId>
            <artifactId>reproducible-build-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>flatten-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>1.6.8</version>
            <extensions>true</extensions>
            <executions>
              <execution>
                <id>default-deploy</id>
                <phase>deploy</phase>
                <goals>
                  <goal>deploy</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <autoReleaseAfterClose>false</autoReleaseAfterClose>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.6</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
