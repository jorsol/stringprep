image: docker.io/azul/zulu-openjdk:11

variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: |
    -Dhttps.protocols=TLSv1.2
    -Djdk.tls.client.protocols=TLSv1.2
    -Dorg.slf4j.simpleLogger.showDateTime=true
    -Djava.awt.headless=true
    -Xss4m
  MAVEN_CLI_OPTS: |
    --batch-mode
    --strict-checksums
    --errors
    --fail-at-end
    --show-version
    --no-transfer-progress
    -DinstallAtEnd=true
    -DdeployAtEnd=true
    -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
    -Dmaven.user.home=$CI_PROJECT_DIR/.m2

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  paths:
    - .m2

stages:
  - build
  - test
  - check

codegen:
  stage: build
  script:
    - ./mvnw $MAVEN_CLI_OPTS verify -Pcodegen -DskipTests

tests:
  stage: test
  script:
    - ./mvnw $MAVEN_CLI_OPTS verify -P it
  artifacts:
    reports:
      junit:
        - "*/target/surefire-reports/TEST-*.xml"
        - "*/target/junit-platform/TEST-*.xml"

sonarcloud-check:
  stage: check
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  variables:
    GIT_STRATEGY: clone
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  script:
    - ./mvnw $MAVEN_CLI_OPTS verify sonar:sonar -Dsonar.qualitygate.wait=true -Pcoverage
  only:
    - merge_requests
    - develop
    - main

static-checks:
  stage: check
  script:
    - ./mvnw $MAVEN_CLI_OPTS verify -Pcheck

include:
  - template: Dependency-Scanning.gitlab-ci.yml
